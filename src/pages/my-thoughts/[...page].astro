---
import { getCollection } from 'astro:content';

import Archive from '@layouts/Archive.astro';
import Single from '@layouts/Single.astro';

export async function getStaticPaths({ paginate }) {
	let posts = await getCollection('my-thoughts');

	// Sort posts in reverse chronological order (newest first).
	posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

	// Remap URLs for posts and add params.
	const postParams = posts.map(post => {
		const slug = post.slug.split('/').pop()

		return {
			params: {
				page: slug
			},
			props: {
				kind: 'single single-post',
				post: {...post}
			}
		};
	});

	// Create pagination.
	let paginationParams = paginate(posts);
	paginationParams = paginationParams.map((params) => {
		return {
			...params,
			props: {
				...params.props,
				kind: 'archive'
			}
		}
	});

	// Return the combined params.
	return [
		...postParams,
		...paginationParams
	];
};

const { kind, page, post } = Astro.props;
---
{'archive' !== kind
	? <Single kind={kind} post={post} />
	: <Archive kind={kind} page={page} />
}
