---
import { getCollection } from "astro:content";
import Archive from '@/layouts/Archive.astro';
import { sortEntriesByTitle, filterDrafts } from "@/utils";
import type { PaginationPage, PaginationEntry, Snippet } from "@/types";
import Section from "@/components/Section.astro";
import FormattedDate from "@/components/FormattedDate.astro";
import Link from "@/components/Link.astro";

export async function getStaticPaths({ paginate }) {
    let entries = await getCollection('snippets') as PaginationEntry[];

    entries = sortEntriesByTitle(entries) as PaginationEntry[];
    entries = filterDrafts(entries) as PaginationEntry[];

    return paginate(entries);
}

const { page } : { page: PaginationPage } = Astro.props;
const title = 'Snippets';
const description = "A collection of snippets I have for web development.";
---

<Archive title={`${title} | Page ${page.currentPage}`} description={description} kind="snippets">
	<Section tag='header' emphasis>
		<h1>
			{title}

			<span class="subtitle">A repository of little code goodies</span>
		</h1>
	</Section>
	<Section>
		<div class="snippets">
			<table class="snippets__table">
				<thead>
					<tr>
						<th>Name</th>
						<th>Description</th>
						<th>Categories</th>
						<th>Last Updated</th>
					</tr>
				</thead>
				<tbody>
					{page.data.map(snippet => {
						const { data } = snippet;
						const { title, description, lastmod, categories } = data as Snippet;
						const href = `${snippet.collection}/${snippet.slug}`;

						return (
							<tr>
								<td>
									<Link href={href}>{title}</Link>
								</td>
								<td>
									{description}
								</td>
								<td>
									{categories.join(', ')}
								</td>
								<td>
									<FormattedDate date={lastmod} />
								</td>
							</tr>
						)
					})}
				</tbody>
			</table>
		</div>
	</Section>
</Archive>